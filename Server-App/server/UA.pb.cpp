// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UA.proto

#include "UA.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_UA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeliveryRequest_UA_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_UA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeliveryResponse_UA_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_UA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ErrorMessage_UA_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_UA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PickupRequest_UA_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_UA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PickupResponse_UA_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_UA_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UpdateDest_UA_2eproto;
class U2AConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<U2AConnect> _instance;
} _U2AConnect_default_instance_;
class U2AConnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<U2AConnected> _instance;
} _U2AConnected_default_instance_;
class PickupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PickupRequest> _instance;
} _PickupRequest_default_instance_;
class PickupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PickupResponse> _instance;
} _PickupResponse_default_instance_;
class DeliveryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeliveryRequest> _instance;
} _DeliveryRequest_default_instance_;
class DeliveryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeliveryResponse> _instance;
} _DeliveryResponse_default_instance_;
class UpdateDestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateDest> _instance;
} _UpdateDest_default_instance_;
class ErrorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorMessage> _instance;
} _ErrorMessage_default_instance_;
class A2URequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A2URequest> _instance;
} _A2URequest_default_instance_;
class U2AResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<U2AResponse> _instance;
} _U2AResponse_default_instance_;
class U2ARequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<U2ARequest> _instance;
} _U2ARequest_default_instance_;
class A2UResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A2UResponse> _instance;
} _A2UResponse_default_instance_;
static void InitDefaultsU2AConnect_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_U2AConnect_default_instance_;
    new (ptr) ::U2AConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::U2AConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_U2AConnect_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsU2AConnect_UA_2eproto}, {}};

static void InitDefaultsU2AConnected_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_U2AConnected_default_instance_;
    new (ptr) ::U2AConnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::U2AConnected::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_U2AConnected_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsU2AConnected_UA_2eproto}, {}};

static void InitDefaultsPickupRequest_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PickupRequest_default_instance_;
    new (ptr) ::PickupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PickupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PickupRequest_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPickupRequest_UA_2eproto}, {}};

static void InitDefaultsPickupResponse_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PickupResponse_default_instance_;
    new (ptr) ::PickupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PickupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PickupResponse_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPickupResponse_UA_2eproto}, {}};

static void InitDefaultsDeliveryRequest_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeliveryRequest_default_instance_;
    new (ptr) ::DeliveryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeliveryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeliveryRequest_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeliveryRequest_UA_2eproto}, {}};

static void InitDefaultsDeliveryResponse_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeliveryResponse_default_instance_;
    new (ptr) ::DeliveryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeliveryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeliveryResponse_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeliveryResponse_UA_2eproto}, {}};

static void InitDefaultsUpdateDest_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UpdateDest_default_instance_;
    new (ptr) ::UpdateDest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UpdateDest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateDest_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateDest_UA_2eproto}, {}};

static void InitDefaultsErrorMessage_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ErrorMessage_default_instance_;
    new (ptr) ::ErrorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ErrorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorMessage_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorMessage_UA_2eproto}, {}};

static void InitDefaultsA2URequest_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_A2URequest_default_instance_;
    new (ptr) ::A2URequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::A2URequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_A2URequest_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsA2URequest_UA_2eproto}, {
      &scc_info_PickupRequest_UA_2eproto.base,
      &scc_info_DeliveryRequest_UA_2eproto.base,}};

static void InitDefaultsU2AResponse_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_U2AResponse_default_instance_;
    new (ptr) ::U2AResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::U2AResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_U2AResponse_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsU2AResponse_UA_2eproto}, {
      &scc_info_PickupResponse_UA_2eproto.base,
      &scc_info_DeliveryResponse_UA_2eproto.base,
      &scc_info_ErrorMessage_UA_2eproto.base,}};

static void InitDefaultsU2ARequest_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_U2ARequest_default_instance_;
    new (ptr) ::U2ARequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::U2ARequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_U2ARequest_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsU2ARequest_UA_2eproto}, {
      &scc_info_UpdateDest_UA_2eproto.base,}};

static void InitDefaultsA2UResponse_UA_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_A2UResponse_default_instance_;
    new (ptr) ::A2UResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::A2UResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_A2UResponse_UA_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsA2UResponse_UA_2eproto}, {
      &scc_info_ErrorMessage_UA_2eproto.base,}};

void InitDefaults_UA_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_U2AConnect_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_U2AConnected_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PickupRequest_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PickupResponse_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeliveryRequest_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeliveryResponse_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateDest_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorMessage_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_A2URequest_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_U2AResponse_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_U2ARequest_UA_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_A2UResponse_UA_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_UA_2eproto[12];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_UA_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_UA_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_UA_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::U2AConnect, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::U2AConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::U2AConnect, worldid_),
  0,
  PROTOBUF_FIELD_OFFSET(::U2AConnected, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::U2AConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::U2AConnected, worldid_),
  PROTOBUF_FIELD_OFFSET(::U2AConnected, result_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::PickupRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PickupRequest, seqnum_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, orderid_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, productname_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, wh_id_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, wh_x_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, wh_y_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, dest_x_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, dest_y_),
  PROTOBUF_FIELD_OFFSET(::PickupRequest, upsaccount_),
  2,
  3,
  0,
  4,
  5,
  6,
  7,
  8,
  1,
  PROTOBUF_FIELD_OFFSET(::PickupResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PickupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PickupResponse, seqnum_),
  PROTOBUF_FIELD_OFFSET(::PickupResponse, tracknum_),
  PROTOBUF_FIELD_OFFSET(::PickupResponse, orderid_),
  PROTOBUF_FIELD_OFFSET(::PickupResponse, truckid_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::DeliveryRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::DeliveryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeliveryRequest, seqnum_),
  PROTOBUF_FIELD_OFFSET(::DeliveryRequest, tracknum_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::DeliveryResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::DeliveryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DeliveryResponse, seqnum_),
  PROTOBUF_FIELD_OFFSET(::DeliveryResponse, tracknum_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::UpdateDest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::UpdateDest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UpdateDest, seqnum_),
  PROTOBUF_FIELD_OFFSET(::UpdateDest, tracknum_),
  PROTOBUF_FIELD_OFFSET(::UpdateDest, new_x_),
  PROTOBUF_FIELD_OFFSET(::UpdateDest, new_y_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::ErrorMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ErrorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ErrorMessage, err_),
  PROTOBUF_FIELD_OFFSET(::ErrorMessage, originseqnum_),
  PROTOBUF_FIELD_OFFSET(::ErrorMessage, seqnum_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::A2URequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::A2URequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::A2URequest, pickup_),
  PROTOBUF_FIELD_OFFSET(::A2URequest, delivery_),
  PROTOBUF_FIELD_OFFSET(::A2URequest, ack_),
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::U2AResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::U2AResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::U2AResponse, pickup_),
  PROTOBUF_FIELD_OFFSET(::U2AResponse, delivery_),
  PROTOBUF_FIELD_OFFSET(::U2AResponse, error_),
  PROTOBUF_FIELD_OFFSET(::U2AResponse, ack_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::U2ARequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::U2ARequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::U2ARequest, dest_),
  PROTOBUF_FIELD_OFFSET(::U2ARequest, ack_),
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::A2UResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::A2UResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::A2UResponse, error_),
  PROTOBUF_FIELD_OFFSET(::A2UResponse, ack_),
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::U2AConnect)},
  { 7, 14, sizeof(::U2AConnected)},
  { 16, 30, sizeof(::PickupRequest)},
  { 39, 48, sizeof(::PickupResponse)},
  { 52, 59, sizeof(::DeliveryRequest)},
  { 61, 68, sizeof(::DeliveryResponse)},
  { 70, 79, sizeof(::UpdateDest)},
  { 83, 91, sizeof(::ErrorMessage)},
  { 94, 102, sizeof(::A2URequest)},
  { 105, 114, sizeof(::U2AResponse)},
  { 118, 125, sizeof(::U2ARequest)},
  { 127, 134, sizeof(::A2UResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_U2AConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_U2AConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PickupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PickupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeliveryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeliveryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UpdateDest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ErrorMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_A2URequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_U2AResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_U2ARequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_A2UResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_UA_2eproto = {
  {}, AddDescriptors_UA_2eproto, "UA.proto", schemas,
  file_default_instances, TableStruct_UA_2eproto::offsets,
  file_level_metadata_UA_2eproto, 12, file_level_enum_descriptors_UA_2eproto, file_level_service_descriptors_UA_2eproto,
};

const char descriptor_table_protodef_UA_2eproto[] =
  "\n\010UA.proto\"\035\n\nU2AConnect\022\017\n\007worldid\030\001 \002("
  "\003\"/\n\014U2AConnected\022\017\n\007worldid\030\001 \002(\003\022\016\n\006re"
  "sult\030\002 \002(\t\"\244\001\n\rPickupRequest\022\016\n\006seqnum\030\001"
  " \002(\003\022\017\n\007orderid\030\002 \002(\003\022\023\n\013productName\030\003 \002"
  "(\t\022\r\n\005wh_id\030\004 \002(\003\022\014\n\004wh_x\030\005 \002(\003\022\014\n\004wh_y\030"
  "\006 \002(\003\022\016\n\006dest_x\030\007 \002(\003\022\016\n\006dest_y\030\010 \002(\003\022\022\n"
  "\nupsAccount\030\t \001(\t\"T\n\016PickupResponse\022\016\n\006s"
  "eqnum\030\001 \002(\003\022\020\n\010tracknum\030\002 \002(\003\022\017\n\007orderid"
  "\030\003 \002(\003\022\017\n\007truckid\030\004 \002(\003\"3\n\017DeliveryReque"
  "st\022\016\n\006seqnum\030\001 \002(\003\022\020\n\010tracknum\030\002 \002(\003\"4\n\020"
  "DeliveryResponse\022\016\n\006seqnum\030\001 \002(\003\022\020\n\010trac"
  "knum\030\002 \002(\003\"L\n\nUpdateDest\022\016\n\006seqnum\030\001 \002(\003"
  "\022\020\n\010tracknum\030\002 \002(\003\022\r\n\005new_x\030\003 \002(\003\022\r\n\005new"
  "_y\030\004 \002(\003\"A\n\014ErrorMessage\022\013\n\003err\030\001 \002(\t\022\024\n"
  "\014originseqnum\030\002 \002(\003\022\016\n\006seqnum\030\003 \002(\003\"]\n\nA"
  "2URequest\022\036\n\006pickup\030\001 \003(\0132\016.PickupReques"
  "t\022\"\n\010delivery\030\002 \003(\0132\020.DeliveryRequest\022\013\n"
  "\003ack\030\003 \003(\003\"~\n\013U2AResponse\022\037\n\006pickup\030\001 \003("
  "\0132\017.PickupResponse\022#\n\010delivery\030\002 \003(\0132\021.D"
  "eliveryResponse\022\034\n\005error\030\003 \003(\0132\r.ErrorMe"
  "ssage\022\013\n\003ack\030\004 \003(\003\"4\n\nU2ARequest\022\031\n\004dest"
  "\030\001 \003(\0132\013.UpdateDest\022\013\n\003ack\030\002 \003(\003\"8\n\013A2UR"
  "esponse\022\034\n\005error\030\001 \003(\0132\r.ErrorMessage\022\013\n"
  "\003ack\030\002 \003(\003"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_UA_2eproto = {
  false, InitDefaults_UA_2eproto, 
  descriptor_table_protodef_UA_2eproto,
  "UA.proto", &assign_descriptors_table_UA_2eproto, 930,
};

void AddDescriptors_UA_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_UA_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_UA_2eproto = []() { AddDescriptors_UA_2eproto(); return true; }();

// ===================================================================

void U2AConnect::InitAsDefaultInstance() {
}
class U2AConnect::HasBitSetters {
 public:
  static void set_has_worldid(U2AConnect* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U2AConnect::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U2AConnect::U2AConnect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:U2AConnect)
}
U2AConnect::U2AConnect(const U2AConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:U2AConnect)
}

void U2AConnect::SharedCtor() {
  worldid_ = PROTOBUF_LONGLONG(0);
}

U2AConnect::~U2AConnect() {
  // @@protoc_insertion_point(destructor:U2AConnect)
  SharedDtor();
}

void U2AConnect::SharedDtor() {
}

void U2AConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const U2AConnect& U2AConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_U2AConnect_UA_2eproto.base);
  return *internal_default_instance();
}


void U2AConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:U2AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worldid_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* U2AConnect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<U2AConnect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_worldid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool U2AConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:U2AConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_worldid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:U2AConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:U2AConnect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void U2AConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:U2AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:U2AConnect)
}

::google::protobuf::uint8* U2AConnect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:U2AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:U2AConnect)
  return target;
}

size_t U2AConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:U2AConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 worldid = 1;
  if (has_worldid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void U2AConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:U2AConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const U2AConnect* source =
      ::google::protobuf::DynamicCastToGenerated<U2AConnect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:U2AConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:U2AConnect)
    MergeFrom(*source);
  }
}

void U2AConnect::MergeFrom(const U2AConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:U2AConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_worldid()) {
    set_worldid(from.worldid());
  }
}

void U2AConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:U2AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U2AConnect::CopyFrom(const U2AConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:U2AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U2AConnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void U2AConnect::Swap(U2AConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U2AConnect::InternalSwap(U2AConnect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(worldid_, other->worldid_);
}

::google::protobuf::Metadata U2AConnect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void U2AConnected::InitAsDefaultInstance() {
}
class U2AConnected::HasBitSetters {
 public:
  static void set_has_worldid(U2AConnected* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_result(U2AConnected* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U2AConnected::kWorldidFieldNumber;
const int U2AConnected::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U2AConnected::U2AConnected()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:U2AConnected)
}
U2AConnected::U2AConnected(const U2AConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:U2AConnected)
}

void U2AConnected::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_U2AConnected_UA_2eproto.base);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worldid_ = PROTOBUF_LONGLONG(0);
}

U2AConnected::~U2AConnected() {
  // @@protoc_insertion_point(destructor:U2AConnected)
  SharedDtor();
}

void U2AConnected::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void U2AConnected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const U2AConnected& U2AConnected::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_U2AConnected_UA_2eproto.base);
  return *internal_default_instance();
}


void U2AConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:U2AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    result_.ClearNonDefaultToEmptyNoArena();
  }
  worldid_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* U2AConnected::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<U2AConnected*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_worldid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string result = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("U2AConnected.result");
        object = msg->mutable_result();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool U2AConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:U2AConnected)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_worldid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "U2AConnected.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:U2AConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:U2AConnected)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void U2AConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:U2AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // required string result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "U2AConnected.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:U2AConnected)
}

::google::protobuf::uint8* U2AConnected::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:U2AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // required string result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "U2AConnected.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:U2AConnected)
  return target;
}

size_t U2AConnected::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:U2AConnected)
  size_t total_size = 0;

  if (has_result()) {
    // required string result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  if (has_worldid()) {
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  return total_size;
}
size_t U2AConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:U2AConnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());

    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void U2AConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:U2AConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const U2AConnected* source =
      ::google::protobuf::DynamicCastToGenerated<U2AConnected>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:U2AConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:U2AConnected)
    MergeFrom(*source);
  }
}

void U2AConnected::MergeFrom(const U2AConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:U2AConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      worldid_ = from.worldid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void U2AConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:U2AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U2AConnected::CopyFrom(const U2AConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:U2AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U2AConnected::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void U2AConnected::Swap(U2AConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U2AConnected::InternalSwap(U2AConnected* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(worldid_, other->worldid_);
}

::google::protobuf::Metadata U2AConnected::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PickupRequest::InitAsDefaultInstance() {
}
class PickupRequest::HasBitSetters {
 public:
  static void set_has_seqnum(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_orderid(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_productname(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_wh_id(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_wh_x(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_wh_y(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_dest_x(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_dest_y(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_upsaccount(PickupRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PickupRequest::kSeqnumFieldNumber;
const int PickupRequest::kOrderidFieldNumber;
const int PickupRequest::kProductNameFieldNumber;
const int PickupRequest::kWhIdFieldNumber;
const int PickupRequest::kWhXFieldNumber;
const int PickupRequest::kWhYFieldNumber;
const int PickupRequest::kDestXFieldNumber;
const int PickupRequest::kDestYFieldNumber;
const int PickupRequest::kUpsAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PickupRequest::PickupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PickupRequest)
}
PickupRequest::PickupRequest(const PickupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_productname()) {
    productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
  }
  upsaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_upsaccount()) {
    upsaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upsaccount_);
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&dest_y_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(dest_y_));
  // @@protoc_insertion_point(copy_constructor:PickupRequest)
}

void PickupRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PickupRequest_UA_2eproto.base);
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upsaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_y_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(dest_y_));
}

PickupRequest::~PickupRequest() {
  // @@protoc_insertion_point(destructor:PickupRequest)
  SharedDtor();
}

void PickupRequest::SharedDtor() {
  productname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upsaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PickupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PickupRequest& PickupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PickupRequest_UA_2eproto.base);
  return *internal_default_instance();
}


void PickupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PickupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      productname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      upsaccount_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dest_x_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(dest_x_));
  }
  dest_y_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PickupRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PickupRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 orderid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_orderid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required string productName = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PickupRequest.productName");
        object = msg->mutable_productname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int64 wh_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_wh_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 wh_x = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_wh_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 wh_y = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_wh_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 dest_x = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_dest_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 dest_y = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_dest_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string upsAccount = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PickupRequest.upsAccount");
        object = msg->mutable_upsaccount();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PickupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PickupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 orderid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_orderid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string productName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productname().data(), static_cast<int>(this->productname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PickupRequest.productName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 wh_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_wh_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 wh_x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_wh_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wh_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 wh_y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_wh_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wh_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 dest_x = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_dest_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dest_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 dest_y = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_dest_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dest_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string upsAccount = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upsaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->upsaccount().data(), static_cast<int>(this->upsaccount().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PickupRequest.upsAccount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PickupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PickupRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PickupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PickupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seqnum(), output);
  }

  // required int64 orderid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->orderid(), output);
  }

  // required string productName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productname().data(), static_cast<int>(this->productname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PickupRequest.productName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productname(), output);
  }

  // required int64 wh_id = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->wh_id(), output);
  }

  // required int64 wh_x = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->wh_x(), output);
  }

  // required int64 wh_y = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->wh_y(), output);
  }

  // required int64 dest_x = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->dest_x(), output);
  }

  // required int64 dest_y = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->dest_y(), output);
  }

  // optional string upsAccount = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upsaccount().data(), static_cast<int>(this->upsaccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PickupRequest.upsAccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->upsaccount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PickupRequest)
}

::google::protobuf::uint8* PickupRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PickupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seqnum(), target);
  }

  // required int64 orderid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->orderid(), target);
  }

  // required string productName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productname().data(), static_cast<int>(this->productname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PickupRequest.productName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->productname(), target);
  }

  // required int64 wh_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->wh_id(), target);
  }

  // required int64 wh_x = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->wh_x(), target);
  }

  // required int64 wh_y = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->wh_y(), target);
  }

  // required int64 dest_x = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->dest_x(), target);
  }

  // required int64 dest_y = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->dest_y(), target);
  }

  // optional string upsAccount = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upsaccount().data(), static_cast<int>(this->upsaccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PickupRequest.upsAccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->upsaccount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PickupRequest)
  return target;
}

size_t PickupRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PickupRequest)
  size_t total_size = 0;

  if (has_productname()) {
    // required string productName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productname());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_orderid()) {
    // required int64 orderid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  if (has_wh_id()) {
    // required int64 wh_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wh_id());
  }

  if (has_wh_x()) {
    // required int64 wh_x = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wh_x());
  }

  if (has_wh_y()) {
    // required int64 wh_y = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wh_y());
  }

  if (has_dest_x()) {
    // required int64 dest_x = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dest_x());
  }

  if (has_dest_y()) {
    // required int64 dest_y = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dest_y());
  }

  return total_size;
}
size_t PickupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PickupRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001fd) ^ 0x000001fd) == 0) {  // All required fields are present.
    // required string productName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productname());

    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int64 orderid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());

    // required int64 wh_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wh_id());

    // required int64 wh_x = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wh_x());

    // required int64 wh_y = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wh_y());

    // required int64 dest_x = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dest_x());

    // required int64 dest_y = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dest_y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string upsAccount = 9;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upsaccount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PickupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PickupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PickupRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PickupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PickupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PickupRequest)
    MergeFrom(*source);
  }
}

void PickupRequest::MergeFrom(const PickupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PickupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      upsaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upsaccount_);
    }
    if (cached_has_bits & 0x00000004u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000008u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000010u) {
      wh_id_ = from.wh_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      wh_x_ = from.wh_x_;
    }
    if (cached_has_bits & 0x00000040u) {
      wh_y_ = from.wh_y_;
    }
    if (cached_has_bits & 0x00000080u) {
      dest_x_ = from.dest_x_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_dest_y(from.dest_y());
  }
}

void PickupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PickupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PickupRequest::CopyFrom(const PickupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PickupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PickupRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001fd) != 0x000001fd) return false;
  return true;
}

void PickupRequest::Swap(PickupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PickupRequest::InternalSwap(PickupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  productname_.Swap(&other->productname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  upsaccount_.Swap(&other->upsaccount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(seqnum_, other->seqnum_);
  swap(orderid_, other->orderid_);
  swap(wh_id_, other->wh_id_);
  swap(wh_x_, other->wh_x_);
  swap(wh_y_, other->wh_y_);
  swap(dest_x_, other->dest_x_);
  swap(dest_y_, other->dest_y_);
}

::google::protobuf::Metadata PickupRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PickupResponse::InitAsDefaultInstance() {
}
class PickupResponse::HasBitSetters {
 public:
  static void set_has_seqnum(PickupResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tracknum(PickupResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_orderid(PickupResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_truckid(PickupResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PickupResponse::kSeqnumFieldNumber;
const int PickupResponse::kTracknumFieldNumber;
const int PickupResponse::kOrderidFieldNumber;
const int PickupResponse::kTruckidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PickupResponse::PickupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PickupResponse)
}
PickupResponse::PickupResponse(const PickupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:PickupResponse)
}

void PickupResponse::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
}

PickupResponse::~PickupResponse() {
  // @@protoc_insertion_point(destructor:PickupResponse)
  SharedDtor();
}

void PickupResponse::SharedDtor() {
}

void PickupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PickupResponse& PickupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PickupResponse_UA_2eproto.base);
  return *internal_default_instance();
}


void PickupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PickupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PickupResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PickupResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 tracknum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_tracknum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 orderid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_orderid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 truckid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_truckid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PickupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PickupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 tracknum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_tracknum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tracknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 orderid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_orderid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 truckid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_truckid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PickupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PickupResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PickupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PickupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seqnum(), output);
  }

  // required int64 tracknum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->tracknum(), output);
  }

  // required int64 orderid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->orderid(), output);
  }

  // required int64 truckid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->truckid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PickupResponse)
}

::google::protobuf::uint8* PickupResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PickupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seqnum(), target);
  }

  // required int64 tracknum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->tracknum(), target);
  }

  // required int64 orderid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->orderid(), target);
  }

  // required int64 truckid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->truckid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PickupResponse)
  return target;
}

size_t PickupResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PickupResponse)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_tracknum()) {
    // required int64 tracknum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tracknum());
  }

  if (has_orderid()) {
    // required int64 orderid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  if (has_truckid()) {
    // required int64 truckid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->truckid());
  }

  return total_size;
}
size_t PickupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PickupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int64 tracknum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tracknum());

    // required int64 orderid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());

    // required int64 truckid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PickupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PickupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PickupResponse* source =
      ::google::protobuf::DynamicCastToGenerated<PickupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PickupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PickupResponse)
    MergeFrom(*source);
  }
}

void PickupResponse::MergeFrom(const PickupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PickupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      tracknum_ = from.tracknum_;
    }
    if (cached_has_bits & 0x00000004u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000008u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PickupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PickupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PickupResponse::CopyFrom(const PickupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PickupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PickupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PickupResponse::Swap(PickupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PickupResponse::InternalSwap(PickupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(seqnum_, other->seqnum_);
  swap(tracknum_, other->tracknum_);
  swap(orderid_, other->orderid_);
  swap(truckid_, other->truckid_);
}

::google::protobuf::Metadata PickupResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeliveryRequest::InitAsDefaultInstance() {
}
class DeliveryRequest::HasBitSetters {
 public:
  static void set_has_seqnum(DeliveryRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tracknum(DeliveryRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeliveryRequest::kSeqnumFieldNumber;
const int DeliveryRequest::kTracknumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeliveryRequest::DeliveryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeliveryRequest)
}
DeliveryRequest::DeliveryRequest(const DeliveryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&tracknum_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(tracknum_));
  // @@protoc_insertion_point(copy_constructor:DeliveryRequest)
}

void DeliveryRequest::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tracknum_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(tracknum_));
}

DeliveryRequest::~DeliveryRequest() {
  // @@protoc_insertion_point(destructor:DeliveryRequest)
  SharedDtor();
}

void DeliveryRequest::SharedDtor() {
}

void DeliveryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeliveryRequest& DeliveryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeliveryRequest_UA_2eproto.base);
  return *internal_default_instance();
}


void DeliveryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DeliveryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tracknum_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(tracknum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeliveryRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeliveryRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 tracknum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_tracknum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeliveryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeliveryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 tracknum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_tracknum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tracknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeliveryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeliveryRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeliveryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeliveryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seqnum(), output);
  }

  // required int64 tracknum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->tracknum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeliveryRequest)
}

::google::protobuf::uint8* DeliveryRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeliveryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seqnum(), target);
  }

  // required int64 tracknum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->tracknum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeliveryRequest)
  return target;
}

size_t DeliveryRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DeliveryRequest)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_tracknum()) {
    // required int64 tracknum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tracknum());
  }

  return total_size;
}
size_t DeliveryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeliveryRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int64 tracknum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tracknum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeliveryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeliveryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeliveryRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeliveryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeliveryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeliveryRequest)
    MergeFrom(*source);
  }
}

void DeliveryRequest::MergeFrom(const DeliveryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeliveryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      tracknum_ = from.tracknum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeliveryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeliveryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeliveryRequest::CopyFrom(const DeliveryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeliveryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeliveryRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DeliveryRequest::Swap(DeliveryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeliveryRequest::InternalSwap(DeliveryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(seqnum_, other->seqnum_);
  swap(tracknum_, other->tracknum_);
}

::google::protobuf::Metadata DeliveryRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeliveryResponse::InitAsDefaultInstance() {
}
class DeliveryResponse::HasBitSetters {
 public:
  static void set_has_seqnum(DeliveryResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tracknum(DeliveryResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeliveryResponse::kSeqnumFieldNumber;
const int DeliveryResponse::kTracknumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeliveryResponse::DeliveryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeliveryResponse)
}
DeliveryResponse::DeliveryResponse(const DeliveryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&tracknum_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(tracknum_));
  // @@protoc_insertion_point(copy_constructor:DeliveryResponse)
}

void DeliveryResponse::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tracknum_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(tracknum_));
}

DeliveryResponse::~DeliveryResponse() {
  // @@protoc_insertion_point(destructor:DeliveryResponse)
  SharedDtor();
}

void DeliveryResponse::SharedDtor() {
}

void DeliveryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeliveryResponse& DeliveryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeliveryResponse_UA_2eproto.base);
  return *internal_default_instance();
}


void DeliveryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DeliveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tracknum_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(tracknum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeliveryResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeliveryResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 tracknum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_tracknum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeliveryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeliveryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 tracknum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_tracknum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tracknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeliveryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeliveryResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeliveryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeliveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seqnum(), output);
  }

  // required int64 tracknum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->tracknum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeliveryResponse)
}

::google::protobuf::uint8* DeliveryResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeliveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seqnum(), target);
  }

  // required int64 tracknum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->tracknum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeliveryResponse)
  return target;
}

size_t DeliveryResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DeliveryResponse)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_tracknum()) {
    // required int64 tracknum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tracknum());
  }

  return total_size;
}
size_t DeliveryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeliveryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int64 tracknum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tracknum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeliveryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeliveryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeliveryResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DeliveryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeliveryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeliveryResponse)
    MergeFrom(*source);
  }
}

void DeliveryResponse::MergeFrom(const DeliveryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeliveryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      tracknum_ = from.tracknum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DeliveryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeliveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeliveryResponse::CopyFrom(const DeliveryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeliveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeliveryResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DeliveryResponse::Swap(DeliveryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeliveryResponse::InternalSwap(DeliveryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(seqnum_, other->seqnum_);
  swap(tracknum_, other->tracknum_);
}

::google::protobuf::Metadata DeliveryResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateDest::InitAsDefaultInstance() {
}
class UpdateDest::HasBitSetters {
 public:
  static void set_has_seqnum(UpdateDest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tracknum(UpdateDest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_new_x(UpdateDest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_new_y(UpdateDest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDest::kSeqnumFieldNumber;
const int UpdateDest::kTracknumFieldNumber;
const int UpdateDest::kNewXFieldNumber;
const int UpdateDest::kNewYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDest::UpdateDest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateDest)
}
UpdateDest::UpdateDest(const UpdateDest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_y_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(new_y_));
  // @@protoc_insertion_point(copy_constructor:UpdateDest)
}

void UpdateDest::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_y_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(new_y_));
}

UpdateDest::~UpdateDest() {
  // @@protoc_insertion_point(destructor:UpdateDest)
  SharedDtor();
}

void UpdateDest::SharedDtor() {
}

void UpdateDest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateDest& UpdateDest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateDest_UA_2eproto.base);
  return *internal_default_instance();
}


void UpdateDest::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateDest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&new_y_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(new_y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateDest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateDest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 tracknum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_tracknum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 new_x = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_new_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 new_y = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_new_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateDest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateDest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 seqnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 tracknum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_tracknum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tracknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 new_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_new_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &new_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 new_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_new_y(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &new_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateDest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateDest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateDest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateDest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seqnum(), output);
  }

  // required int64 tracknum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->tracknum(), output);
  }

  // required int64 new_x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->new_x(), output);
  }

  // required int64 new_y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->new_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateDest)
}

::google::protobuf::uint8* UpdateDest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdateDest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seqnum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seqnum(), target);
  }

  // required int64 tracknum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->tracknum(), target);
  }

  // required int64 new_x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->new_x(), target);
  }

  // required int64 new_y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->new_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateDest)
  return target;
}

size_t UpdateDest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UpdateDest)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_tracknum()) {
    // required int64 tracknum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tracknum());
  }

  if (has_new_x()) {
    // required int64 new_x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->new_x());
  }

  if (has_new_y()) {
    // required int64 new_y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->new_y());
  }

  return total_size;
}
size_t UpdateDest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateDest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int64 seqnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int64 tracknum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tracknum());

    // required int64 new_x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->new_x());

    // required int64 new_y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->new_y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateDest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateDest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDest* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateDest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateDest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateDest)
    MergeFrom(*source);
  }
}

void UpdateDest::MergeFrom(const UpdateDest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateDest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      tracknum_ = from.tracknum_;
    }
    if (cached_has_bits & 0x00000004u) {
      new_x_ = from.new_x_;
    }
    if (cached_has_bits & 0x00000008u) {
      new_y_ = from.new_y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateDest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateDest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDest::CopyFrom(const UpdateDest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateDest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void UpdateDest::Swap(UpdateDest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDest::InternalSwap(UpdateDest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(seqnum_, other->seqnum_);
  swap(tracknum_, other->tracknum_);
  swap(new_x_, other->new_x_);
  swap(new_y_, other->new_y_);
}

::google::protobuf::Metadata UpdateDest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ErrorMessage::InitAsDefaultInstance() {
}
class ErrorMessage::HasBitSetters {
 public:
  static void set_has_err(ErrorMessage* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_originseqnum(ErrorMessage* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_seqnum(ErrorMessage* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorMessage::kErrFieldNumber;
const int ErrorMessage::kOriginseqnumFieldNumber;
const int ErrorMessage::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorMessage::ErrorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ErrorMessage)
}
ErrorMessage::ErrorMessage(const ErrorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_err()) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ::memcpy(&originseqnum_, &from.originseqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:ErrorMessage)
}

void ErrorMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ErrorMessage_UA_2eproto.base);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&originseqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
}

ErrorMessage::~ErrorMessage() {
  // @@protoc_insertion_point(destructor:ErrorMessage)
  SharedDtor();
}

void ErrorMessage::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorMessage& ErrorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ErrorMessage_UA_2eproto.base);
  return *internal_default_instance();
}


void ErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    err_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&originseqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ErrorMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ErrorMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string err = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ErrorMessage.err");
        object = msg->mutable_err();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int64 originseqnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_originseqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int64 seqnum = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_seqnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ErrorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ErrorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ErrorMessage.err");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 originseqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_originseqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &originseqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_seqnum(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ErrorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ErrorMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ErrorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ErrorMessage.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  // required int64 originseqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->originseqnum(), output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ErrorMessage)
}

::google::protobuf::uint8* ErrorMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ErrorMessage.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  // required int64 originseqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->originseqnum(), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ErrorMessage)
  return target;
}

size_t ErrorMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ErrorMessage)
  size_t total_size = 0;

  if (has_err()) {
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (has_originseqnum()) {
    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t ErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ErrorMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());

    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorMessage* source =
      ::google::protobuf::DynamicCastToGenerated<ErrorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ErrorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ErrorMessage)
    MergeFrom(*source);
  }
}

void ErrorMessage::MergeFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (cached_has_bits & 0x00000002u) {
      originseqnum_ = from.originseqnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ErrorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorMessage::CopyFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ErrorMessage::Swap(ErrorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorMessage::InternalSwap(ErrorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  err_.Swap(&other->err_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(originseqnum_, other->originseqnum_);
  swap(seqnum_, other->seqnum_);
}

::google::protobuf::Metadata ErrorMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void A2URequest::InitAsDefaultInstance() {
}
class A2URequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A2URequest::kPickupFieldNumber;
const int A2URequest::kDeliveryFieldNumber;
const int A2URequest::kAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A2URequest::A2URequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:A2URequest)
}
A2URequest::A2URequest(const A2URequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pickup_(from.pickup_),
      delivery_(from.delivery_),
      ack_(from.ack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:A2URequest)
}

void A2URequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_A2URequest_UA_2eproto.base);
}

A2URequest::~A2URequest() {
  // @@protoc_insertion_point(destructor:A2URequest)
  SharedDtor();
}

void A2URequest::SharedDtor() {
}

void A2URequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const A2URequest& A2URequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_A2URequest_UA_2eproto.base);
  return *internal_default_instance();
}


void A2URequest::Clear() {
// @@protoc_insertion_point(message_clear_start:A2URequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickup_.Clear();
  delivery_.Clear();
  ack_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* A2URequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<A2URequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .PickupRequest pickup = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::PickupRequest::_InternalParse;
          object = msg->add_pickup();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .DeliveryRequest delivery = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::DeliveryRequest::_InternalParse;
          object = msg->add_delivery();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated int64 ack = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_ack(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_ack();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool A2URequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:A2URequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PickupRequest pickup = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pickup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DeliveryRequest delivery = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_delivery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ack = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_ack())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ack())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:A2URequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:A2URequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void A2URequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:A2URequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PickupRequest pickup = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pickup_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pickup(static_cast<int>(i)),
      output);
  }

  // repeated .DeliveryRequest delivery = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delivery_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->delivery(static_cast<int>(i)),
      output);
  }

  // repeated int64 ack = 3;
  for (int i = 0, n = this->ack_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->ack(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:A2URequest)
}

::google::protobuf::uint8* A2URequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:A2URequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PickupRequest pickup = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pickup_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pickup(static_cast<int>(i)), target);
  }

  // repeated .DeliveryRequest delivery = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delivery_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->delivery(static_cast<int>(i)), target);
  }

  // repeated int64 ack = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->ack_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:A2URequest)
  return target;
}

size_t A2URequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:A2URequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PickupRequest pickup = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pickup_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pickup(static_cast<int>(i)));
    }
  }

  // repeated .DeliveryRequest delivery = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->delivery_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->delivery(static_cast<int>(i)));
    }
  }

  // repeated int64 ack = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ack_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ack_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void A2URequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:A2URequest)
  GOOGLE_DCHECK_NE(&from, this);
  const A2URequest* source =
      ::google::protobuf::DynamicCastToGenerated<A2URequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:A2URequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:A2URequest)
    MergeFrom(*source);
  }
}

void A2URequest::MergeFrom(const A2URequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:A2URequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pickup_.MergeFrom(from.pickup_);
  delivery_.MergeFrom(from.delivery_);
  ack_.MergeFrom(from.ack_);
}

void A2URequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:A2URequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A2URequest::CopyFrom(const A2URequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:A2URequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A2URequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->pickup())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->delivery())) return false;
  return true;
}

void A2URequest::Swap(A2URequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A2URequest::InternalSwap(A2URequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&pickup_)->InternalSwap(CastToBase(&other->pickup_));
  CastToBase(&delivery_)->InternalSwap(CastToBase(&other->delivery_));
  ack_.InternalSwap(&other->ack_);
}

::google::protobuf::Metadata A2URequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void U2AResponse::InitAsDefaultInstance() {
}
class U2AResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U2AResponse::kPickupFieldNumber;
const int U2AResponse::kDeliveryFieldNumber;
const int U2AResponse::kErrorFieldNumber;
const int U2AResponse::kAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U2AResponse::U2AResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:U2AResponse)
}
U2AResponse::U2AResponse(const U2AResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pickup_(from.pickup_),
      delivery_(from.delivery_),
      error_(from.error_),
      ack_(from.ack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:U2AResponse)
}

void U2AResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_U2AResponse_UA_2eproto.base);
}

U2AResponse::~U2AResponse() {
  // @@protoc_insertion_point(destructor:U2AResponse)
  SharedDtor();
}

void U2AResponse::SharedDtor() {
}

void U2AResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const U2AResponse& U2AResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_U2AResponse_UA_2eproto.base);
  return *internal_default_instance();
}


void U2AResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:U2AResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickup_.Clear();
  delivery_.Clear();
  error_.Clear();
  ack_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* U2AResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<U2AResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .PickupResponse pickup = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::PickupResponse::_InternalParse;
          object = msg->add_pickup();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .DeliveryResponse delivery = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::DeliveryResponse::_InternalParse;
          object = msg->add_delivery();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .ErrorMessage error = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ErrorMessage::_InternalParse;
          object = msg->add_error();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated int64 ack = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 32) {
          do {
            msg->add_ack(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_ack();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool U2AResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:U2AResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PickupResponse pickup = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pickup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DeliveryResponse delivery = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_delivery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ErrorMessage error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ack = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32u, input, this->mutable_ack())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ack())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:U2AResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:U2AResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void U2AResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:U2AResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PickupResponse pickup = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pickup_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pickup(static_cast<int>(i)),
      output);
  }

  // repeated .DeliveryResponse delivery = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delivery_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->delivery(static_cast<int>(i)),
      output);
  }

  // repeated .ErrorMessage error = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->error(static_cast<int>(i)),
      output);
  }

  // repeated int64 ack = 4;
  for (int i = 0, n = this->ack_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->ack(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:U2AResponse)
}

::google::protobuf::uint8* U2AResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:U2AResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PickupResponse pickup = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pickup_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pickup(static_cast<int>(i)), target);
  }

  // repeated .DeliveryResponse delivery = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delivery_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->delivery(static_cast<int>(i)), target);
  }

  // repeated .ErrorMessage error = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->error(static_cast<int>(i)), target);
  }

  // repeated int64 ack = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(4, this->ack_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:U2AResponse)
  return target;
}

size_t U2AResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:U2AResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PickupResponse pickup = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pickup_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pickup(static_cast<int>(i)));
    }
  }

  // repeated .DeliveryResponse delivery = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->delivery_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->delivery(static_cast<int>(i)));
    }
  }

  // repeated .ErrorMessage error = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->error_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error(static_cast<int>(i)));
    }
  }

  // repeated int64 ack = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ack_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ack_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void U2AResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:U2AResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const U2AResponse* source =
      ::google::protobuf::DynamicCastToGenerated<U2AResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:U2AResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:U2AResponse)
    MergeFrom(*source);
  }
}

void U2AResponse::MergeFrom(const U2AResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:U2AResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pickup_.MergeFrom(from.pickup_);
  delivery_.MergeFrom(from.delivery_);
  error_.MergeFrom(from.error_);
  ack_.MergeFrom(from.ack_);
}

void U2AResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:U2AResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U2AResponse::CopyFrom(const U2AResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:U2AResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U2AResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->pickup())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->delivery())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->error())) return false;
  return true;
}

void U2AResponse::Swap(U2AResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U2AResponse::InternalSwap(U2AResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&pickup_)->InternalSwap(CastToBase(&other->pickup_));
  CastToBase(&delivery_)->InternalSwap(CastToBase(&other->delivery_));
  CastToBase(&error_)->InternalSwap(CastToBase(&other->error_));
  ack_.InternalSwap(&other->ack_);
}

::google::protobuf::Metadata U2AResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void U2ARequest::InitAsDefaultInstance() {
}
class U2ARequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U2ARequest::kDestFieldNumber;
const int U2ARequest::kAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U2ARequest::U2ARequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:U2ARequest)
}
U2ARequest::U2ARequest(const U2ARequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      dest_(from.dest_),
      ack_(from.ack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:U2ARequest)
}

void U2ARequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_U2ARequest_UA_2eproto.base);
}

U2ARequest::~U2ARequest() {
  // @@protoc_insertion_point(destructor:U2ARequest)
  SharedDtor();
}

void U2ARequest::SharedDtor() {
}

void U2ARequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const U2ARequest& U2ARequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_U2ARequest_UA_2eproto.base);
  return *internal_default_instance();
}


void U2ARequest::Clear() {
// @@protoc_insertion_point(message_clear_start:U2ARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dest_.Clear();
  ack_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* U2ARequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<U2ARequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .UpdateDest dest = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::UpdateDest::_InternalParse;
          object = msg->add_dest();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated int64 ack = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_ack(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_ack();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool U2ARequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:U2ARequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UpdateDest dest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ack = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_ack())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ack())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:U2ARequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:U2ARequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void U2ARequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:U2ARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UpdateDest dest = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dest_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->dest(static_cast<int>(i)),
      output);
  }

  // repeated int64 ack = 2;
  for (int i = 0, n = this->ack_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->ack(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:U2ARequest)
}

::google::protobuf::uint8* U2ARequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:U2ARequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UpdateDest dest = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dest_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->dest(static_cast<int>(i)), target);
  }

  // repeated int64 ack = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(2, this->ack_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:U2ARequest)
  return target;
}

size_t U2ARequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:U2ARequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .UpdateDest dest = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dest_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dest(static_cast<int>(i)));
    }
  }

  // repeated int64 ack = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ack_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ack_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void U2ARequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:U2ARequest)
  GOOGLE_DCHECK_NE(&from, this);
  const U2ARequest* source =
      ::google::protobuf::DynamicCastToGenerated<U2ARequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:U2ARequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:U2ARequest)
    MergeFrom(*source);
  }
}

void U2ARequest::MergeFrom(const U2ARequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:U2ARequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dest_.MergeFrom(from.dest_);
  ack_.MergeFrom(from.ack_);
}

void U2ARequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:U2ARequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U2ARequest::CopyFrom(const U2ARequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:U2ARequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U2ARequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->dest())) return false;
  return true;
}

void U2ARequest::Swap(U2ARequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U2ARequest::InternalSwap(U2ARequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&dest_)->InternalSwap(CastToBase(&other->dest_));
  ack_.InternalSwap(&other->ack_);
}

::google::protobuf::Metadata U2ARequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// ===================================================================

void A2UResponse::InitAsDefaultInstance() {
}
class A2UResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A2UResponse::kErrorFieldNumber;
const int A2UResponse::kAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A2UResponse::A2UResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:A2UResponse)
}
A2UResponse::A2UResponse(const A2UResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      error_(from.error_),
      ack_(from.ack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:A2UResponse)
}

void A2UResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_A2UResponse_UA_2eproto.base);
}

A2UResponse::~A2UResponse() {
  // @@protoc_insertion_point(destructor:A2UResponse)
  SharedDtor();
}

void A2UResponse::SharedDtor() {
}

void A2UResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const A2UResponse& A2UResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_A2UResponse_UA_2eproto.base);
  return *internal_default_instance();
}


void A2UResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:A2UResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.Clear();
  ack_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* A2UResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<A2UResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .ErrorMessage error = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::ErrorMessage::_InternalParse;
          object = msg->add_error();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated int64 ack = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_ack(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt64Parser;
        object = msg->mutable_ack();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool A2UResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:A2UResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ErrorMessage error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ack = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_ack())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ack())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:A2UResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:A2UResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void A2UResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:A2UResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ErrorMessage error = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->error(static_cast<int>(i)),
      output);
  }

  // repeated int64 ack = 2;
  for (int i = 0, n = this->ack_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->ack(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:A2UResponse)
}

::google::protobuf::uint8* A2UResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:A2UResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ErrorMessage error = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->error(static_cast<int>(i)), target);
  }

  // repeated int64 ack = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(2, this->ack_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:A2UResponse)
  return target;
}

size_t A2UResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:A2UResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ErrorMessage error = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->error_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error(static_cast<int>(i)));
    }
  }

  // repeated int64 ack = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ack_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ack_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void A2UResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:A2UResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const A2UResponse* source =
      ::google::protobuf::DynamicCastToGenerated<A2UResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:A2UResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:A2UResponse)
    MergeFrom(*source);
  }
}

void A2UResponse::MergeFrom(const A2UResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:A2UResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_.MergeFrom(from.error_);
  ack_.MergeFrom(from.ack_);
}

void A2UResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:A2UResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A2UResponse::CopyFrom(const A2UResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:A2UResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A2UResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->error())) return false;
  return true;
}

void A2UResponse::Swap(A2UResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A2UResponse::InternalSwap(A2UResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&error_)->InternalSwap(CastToBase(&other->error_));
  ack_.InternalSwap(&other->ack_);
}

::google::protobuf::Metadata A2UResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_UA_2eproto);
  return ::file_level_metadata_UA_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::U2AConnect* Arena::CreateMaybeMessage< ::U2AConnect >(Arena* arena) {
  return Arena::CreateInternal< ::U2AConnect >(arena);
}
template<> PROTOBUF_NOINLINE ::U2AConnected* Arena::CreateMaybeMessage< ::U2AConnected >(Arena* arena) {
  return Arena::CreateInternal< ::U2AConnected >(arena);
}
template<> PROTOBUF_NOINLINE ::PickupRequest* Arena::CreateMaybeMessage< ::PickupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::PickupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PickupResponse* Arena::CreateMaybeMessage< ::PickupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::PickupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::DeliveryRequest* Arena::CreateMaybeMessage< ::DeliveryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DeliveryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::DeliveryResponse* Arena::CreateMaybeMessage< ::DeliveryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DeliveryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::UpdateDest* Arena::CreateMaybeMessage< ::UpdateDest >(Arena* arena) {
  return Arena::CreateInternal< ::UpdateDest >(arena);
}
template<> PROTOBUF_NOINLINE ::ErrorMessage* Arena::CreateMaybeMessage< ::ErrorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ErrorMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::A2URequest* Arena::CreateMaybeMessage< ::A2URequest >(Arena* arena) {
  return Arena::CreateInternal< ::A2URequest >(arena);
}
template<> PROTOBUF_NOINLINE ::U2AResponse* Arena::CreateMaybeMessage< ::U2AResponse >(Arena* arena) {
  return Arena::CreateInternal< ::U2AResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::U2ARequest* Arena::CreateMaybeMessage< ::U2ARequest >(Arena* arena) {
  return Arena::CreateInternal< ::U2ARequest >(arena);
}
template<> PROTOBUF_NOINLINE ::A2UResponse* Arena::CreateMaybeMessage< ::A2UResponse >(Arena* arena) {
  return Arena::CreateInternal< ::A2UResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
